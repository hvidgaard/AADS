<?xml version="1.0" encoding="UTF-8"?>
<project name="AADS Project 2" default="make" basedir=".">
	<taskdef resource="cpptasks.tasks" classpath="cpptasks-1.0b5.jar"/>
	<taskdef name="latex" classname="de.dokutransdata.antlatex.LaTeX" classpath="ant_latex_0.0.9_1.jar"/>
	
	<property name="src" value="${basedir}/src" />
	<property name="obj" value="${basedir}/obj" />
	<property name="bin" value="${basedir}/bin" />
	<property name="benchmark" value="${basedir}/benchmark" />
	<property name="report" value="${basedir}/report" />
	
	<import file="${benchmark}/benchmark.xml"/>
	
	<property name="debug" value="true" />
	
	<target name="mkdirs">
		<mkdir dir="${obj}"/>
		<mkdir dir="${bin}"/>
	</target>
	
	<target name="make" depends="mkdirs">
		<mkdir dir="${obj}"/>
		<condition property="isUnix">
			<and>
				<os family="unix" />
				<not><os family="mac" /></not>
			</and>
		</condition>
		<condition property="isMac">
			<os family="mac" />
		</condition>
		<cc outfile="${bin}/benchmark" outtype="executable"
			subsystem="console" objdir="${obj}" debug="${debug}">
			<includepath>
				<pathelement path="${src}"/>
			</includepath>
			<includepath if="isUnix">
				<pathelement path="/usr/include"/>
			</includepath>
			<libset libs="m" if="isUnix" />
			<libset libs="stdc++" />
			<compilerarg value="-Wall" />
			<fileset dir="${src}" includes="*.cpp, **/*.c" excludes="main.c" />
		</cc>
	</target>
	
	<target name="report" depends="copy-graphs">
		<latex latexfile="${report}/aadsrapport.tex"
			verbose="on" clean="on" pdftex="on" workingDir="${report}" />
	</target>
	
	<target name="copy-graphs" depends="convert2pdf">
		<mkdir dir="${report}/graphs" />
		<copy todir="${report}/graphs">
			<fileset dir="${benchmark}/graphs" includes="*.pdf" />
		</copy>
	</target>
	
	<target name="clean" description="Remove all object and binary files">
		<delete includeEmptyDirs="true">
			<fileset dir="${obj}" includes="**/*" defaultexcludes="no"/>
			<fileset dir="${bin}" includes="**/*" defaultexcludes="no"/>
		</delete>
	</target>
	
	<target name="small-benchmark" description="Runs benchmarks on various algorithms">
<!-- 		<small-benchmark graph="random" algorithm="bin" />
		<small-benchmark graph="dkmax2" algorithm="bin" />
		<small-benchmark graph="random" algorithm="fib" />
		<small-benchmark graph="dkmax2" algorithm="fib" /> -->
		<small-benchmark graph="random" algorithm="veb" />
		<small-benchmark graph="dkmax2" algorithm="veb" />
	</target>
	<target name="full-benchmark" description="Runs benchmarks on various algorithms">
<!-- 		<full-benchmark graph="random" algorithm="bin" />
		<full-benchmark graph="dkmax2" algorithm="bin" />
		<full-benchmark graph="random" algorithm="fib" />
		<full-benchmark graph="dkmax2" algorithm="fib" /> -->
		<full-benchmark graph="random" algorithm="veb" />
		<full-benchmark graph="dkmax2" algorithm="veb" />
	</target>
	<target name="dist-full-benchmark" description="Runs benchmarks on various algorithms" depends="alone, make">
		<full-benchmark graph="random" algorithm="bin" />
		<full-benchmark graph="dkmax2" algorithm="bin" />
		<full-benchmark graph="random" algorithm="fib" />
		<full-benchmark graph="dkmax2" algorithm="fib" />
		<full-benchmark graph="random" algorithm="veb" />
		<full-benchmark graph="dkmax2" algorithm="veb" />
	</target>
	<macrodef name="small-benchmark">
		<attribute name="graph"/>
		<attribute name="algorithm"/>
		<attribute name="seed" default="0"/>
		<sequential>
			<benchmark executable="bin/benchmark" graph="@{graph}" algorithm="@{algorithm}"
			 seed="1234" start="700" end="1077" step="13" tests="3" />
			<benchmark executable="bin/benchmark" graph="@{graph}" algorithm="@{algorithm}"
			 seed="1234" start="1090" end="2940" step="37" tests="2" />
			<benchmark executable="bin/benchmark" graph="@{graph}" algorithm="@{algorithm}"
			 seed="1234" start="2940" end="3471" step="59" tests="1" />
		</sequential>
	</macrodef>
	<macrodef name="full-benchmark">
		<attribute name="graph"/>
		<attribute name="algorithm"/>
		<attribute name="seed" default="0"/>
		<sequential>
			<benchmark executable="bin/benchmark" graph="@{graph}" algorithm="@{algorithm}"
			 seed="1234" start="700" end="1077" step="13" tests="10" />
			<benchmark executable="bin/benchmark" graph="@{graph}" algorithm="@{algorithm}"
			 seed="1234" start="1090" end="2940" step="37" tests="9" />
			<benchmark executable="bin/benchmark" graph="@{graph}" algorithm="@{algorithm}"
			 seed="1234" start="2940" end="3530" step="59" tests="8" />
			<benchmark executable="bin/benchmark" graph="@{graph}" algorithm="@{algorithm}"
			 seed="1234" start="3530" end="7750" step="211" tests="7" />
			<benchmark executable="bin/benchmark" graph="@{graph}" algorithm="@{algorithm}"
			 seed="1234" start="7750" end="12140" step="439" tests="6" />
		</sequential>
	</macrodef>
	
	<target name="dist-bm" description="Runs the benchmark target on many computers at once">
		<distribute-ssh-command command="ant -buildfile ${ant.file} dist-full-benchmark" />
	</target>
</project>
